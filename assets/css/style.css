@import url("https://fonts.googleapis.com/css2?family=DM+Sans:wght@400;700&display=swap");

/* Display: block -> Pega toda largura da página e joga o elemento ao seu lado para baixo */

/*=====================GERAL===============*/
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box; /* A caixa header que antes tinha 375px e estava somando com 40 px dos dois paddins, agora não soma mais, fazendo a 
    subtração do tamanho do: "header - padding". Contar a partir da borda da caixa (border-box), e não a partir do padding/conteúdo */
}

:root {
  font-size: 62.5%; /* 1rem = 10px */ /* 1rem = 16 px no font-size: 100% */
  --hue: 170; /* Caso eu mude essa numeração, vou alterar a cor de todos os elementos que receberem o --primary-color */
  --primary-color: hsl(var(--hue), 100%, 26%);
  --headline: hsl(210, 11%, 15%);
  --paragraph: hsl(210, 9%, 31%);
  --brand-beige: hsla(39, 100%, 97%, 1);
  --brand-dark: hsl(var(--hue), 100%, 14%);
  --brand-light: hsl(calc(var(--hue) - 22),23%,89%); /* Calculando outro valor para que ele assuma um valor mais claro do que a cor primária*/
  --brand-light2: hsl(calc(var(--hue) + 10), 14%, 97%);
  --nav-height: 7.2rem;
  --bg-light: hsl(180, 14%, 97%);
}

html {
  scroll-behavior: smooth; /*Comportamento do scroll vai ser rolado de forma suave/animação */
}

html,
body {
  width: 100%;
  height: 100%;
}

body {
  font-family: "DM Sans";
  font-size: 1.6rem; /* 1.6 rem = 16px */
  text-align: center;
  /*Propriedades de texto quando colocados na "pai", vai para todos os filhos*/
  overflow: overlay; /* O scroll sobrepõe a página, fazendo com que ele não seja somado como elemento */
  background-color: var(--bg-light);
}

.wrapper {
  width: min(
    50rem,
    100%
  ); /* Responsividade: Caso a tela seja maior que 500pixels, mantenha ele, caso seja menor, pegue 100% da tela e defina o wrapper como 100% da tela do dispositivo */
  margin-right: auto; /* Auto -> Preencha os espaços automaticamente de acordo com a direção citada */
  margin-left: auto;
  padding-inline: 2.4rem;
}

ul {
  list-style: none;
}

img {
  /*Padronização da imagem*/
  max-width: 100%; /* 100% Vai respeitar o tamanho da caixa na qual ele está inserido, como exemplo essa div de 375px
    a largura maxima da imagem será 375px */
}

section {
  padding-block: 10rem;
}

section header h1 {
  font-size: 3.4rem;
  color: var(--headline);
  line-height: 130%;
  margin-bottom: 2.4rem;
}

section header h2 {
  font-size: 3rem;
  line-height: 3.9rem;
  color: var(--headline);
}

section header h4 {
  font-size: 1.4rem; /* Problema de acessibilidade com a unidade PX */
  letter-spacing: 0.08em;
  line-height: 150%;
  color: var(--primary-color);
  text-transform: uppercase;
  margin-bottom: 1.6rem;
}

section .content p {
  font-size: 1.6rem;
  line-height: 150%;
  color: var(--paragraph);
}

.button {
  background: var(--primary-color);
  border: none;
  border-radius: 4rem;
  margin-bottom: 6rem;
  padding: 1.6rem 3.2rem;
  width: fit-content; /* A largura vai se adaptar ao conteúdo com o "fit-content" e não irá seguir as regras predefinidas pelo display flex */

  /* Como o display flex transforma o elemento em bloco, ele automaticamente pega 100% da largura dele. */
  /*height: 6.2rem;
    width: 26.3rem; Quando definimos uma largura para um elemento em bloco no flex, ele cria um preenchimento de margem no elemento modificado. */
  color: white;
  text-transform: uppercase;
  font-size: 1.4rem;
  font-weight: bold;
  display: flex; /* Display flex mexe com os filhos // Display inline e block mexem com os elementos em sua volta */
  justify-content: center;
  align-items: center;
  gap: 1.6rem; /*Espaço entre os elementos dentro de uma tag com display flex */
  text-decoration: none;
}

.button:hover {
  /* Hover é quando o mouse passa em cima do botão/link(a) */
  background-color: var(--brand-dark);
  transition: background 200ms;
}

/* CUSTOM COLORS */

#services .card circle {
  fill: var(--brand-light);
}

#backToTopButton circle {
  fill: var(--primary-color);
}

#navigation button.open-menu path[stroke*="#00856F"],
#contact li path {
  stroke: var(--primary-color);
}

#navigation .logo path[fill*="00856F"] {
  /* Procure o path que contenha no fill esse atributo */
  fill: var(--primary-color);
}

#navigation.scroll button.open-menu path[stroke*="00856F"] {
  stroke: white;
}

body.menu-expanded #navigation .logo path[fill*="00856F"],
#navigation.scroll .logo path {
  fill: white;
}

/*======================NAVIGATION==============*/

nav {
  display: flex; /* Div vai herdar os atributos da tag pai*/
  height: var(--nav-height); /*72px de altura*/
  /* padding: 1.6rem 2.4rem;  vertical e horizontal*/
  position: fixed; /* Libera as mesmas funções do absolute, só que ele fica fixo na barra de rolagem */
  top: 0;
  width: 100vw;
  z-index: 100;
}

nav .wrapper {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

/*===========SETANDO CLASSE NOVA PARA SCROLL FICAR VERDE NAV===========*/

nav.scroll {
  background: var(--primary-color);
  width: 100vw;
}

/* nav.scroll .logo path { antes svg:nth-child(1)
    fill: white;
} */

nav button {
  background: none;
  border: none;
  cursor: pointer;
}

nav .menu,
nav .close-menu {
  position: fixed;
}

/*========================MENU-EXTEND===============*/

body.menu-expanded {
  overflow: hidden; /* Esconde todos os elementos que ultrapassam o tamanho da tela e criam o scroll */
}

body.menu-expanded > :not(nav) {
  /* Pegar todos os niveis do primeiro nivel > * {}, >(primeiro nivel) *(todos) */
  visibility: hidden;
  /* display: none; elimina tudo */
  /* visibility: hidden; esconde */
}

.menu,
.close-menu,
body.menu-expanded .open-menu {
  opacity: 0;
  visibility: hidden;
}

body.menu-expanded .menu,
body.menu-expanded .close-menu {
  opacity: 1;
  visibility: visible;
}

.menu {
  transform: translateY(100%);
}

body.menu-expanded .menu {
  top: 0;
  left: 0;
  background-color: var(--primary-color);
  width: 100vw;
  height: 100vh;
  padding-top: var(--nav-height);
  transition: transform 300ms;
  transform: translateY(0);
}

/* Display: relative -> Tira o posicionamento fixo */

.menu ul:nth-child(1) {
  display: flex;
  flex-direction: column;
  gap: 4.8rem;
  margin-top: 6rem;
  font-size: 2.4rem;
  font-weight: bold;
  line-height: 3.1rem;
}

.menu ul li a {
  text-decoration: none;
  color: white;
}

.menu .button {
  background-color: white;
  border-radius: 4rem;
  font-weight: 700;
  font-size: 1.8rem;
  line-height: 2.3rem;
  text-transform: uppercase;
  text-decoration: none;
  color: var(--primary-color);
  padding: 1.6rem 3.2rem;
  display: inline-block;
  margin-top: 4.8rem;
  margin-bottom: 8rem;
}

.menu .button:hover {
  background-color: var(--primary-color);
  color: white;
  filter: brightness(
    1.2
  ); /*Como se fosse a propriedade filtro de editores de fotos */
}

.social-links {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 3.2rem;
}

body.menu-expanded .logo,
body.menu-expanded button {
  position: relative;
  z-index: 100;
}

body.menu-expanded .logo path {
  fill: white;
}

body.menu-expanded .logo button path {
  stroke: white;
}

/*============HOME/HEADER==========*/


#home {
  padding-block: 0;
  padding-top: calc(4.1rem + var(--nav-height));
}

#home {
  padding-bottom: 0;
}

#home::before {
  /*Antes do conteúdo do header: fundo verde */
  content: "";
  width: 100%; /*Porcentagem em relação ao tamanho da tela */
  height: calc(80% + var(--nav-height));
  background-color: var(--brand-light);
  display: block;
  position: absolute; /* position: absolute ->O conteúdo não vai considerar ele um 
    elemento e passará por cima dele, ficando oculto. Além disso, ele vai destravar propriedades como 
    top, right,left e bottom, z-index */
  top: 0;
  left: 0;
  z-index: -1; /* Eixo de profundidade */
}

#home .button {
  margin-inline: auto;
}

#home p {
  font-size: 1.8rem;
  font-weight: 400; /* Peso padrão */
  margin-bottom: 3.2rem;
}

#home img {
  width: 26.4rem;
  display: block;
  margin-inline: auto;
  object-position: 0 2rem; /* Mexe com o posicionamento da imagem dentro do img */
}

/* DIV (Display Block): Ocupa todo o espaço horizontal do tamanho do seu elemento pai -> aceita Text-Align
   DIV (Display flex): Ocupa apenas o espaço do conteúdo, com o resto ficando ao lado -> não aceita text-align
  DIV (Display flex) -> Ele não aceita text-align, mas aceita o justify-content, pois após transformar ele
  em flex, o bloco vira um item dentro do espaço do flex 
  DIV (Display flex) -> Pega o tamanho em relação à largura da tela */

#home .stats {
  width: 100%; /* Vai ocupar 100% do espaço disponível na div pai*/
  padding-block: 4rem; /* Margin referent ao top e bottom (eixo Y) */
  background-color: var(--brand-beige);
  border: 1px solid var(--brand-light);
  border-radius: 0.6rem; /* 6 / 10 -> 0.6 */
  margin-inline: auto; /* Margin referente ao left e right (eixo X) */
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 6rem;
}

#home .stat h3 {
  font-size: 4.8rem;
  color: var(--headline);
  line-height: 130%;
  margin-bottom: 0.4rem;
}

#home .stat p {
  margin: 0rem;
  color: var(--primary-color);
}

/*====================SERVICES/HEADER==================*/

#services header h2 {
  margin-bottom: 6rem;
}

#services .cards {
  display: flex;
  flex-direction: column;
  gap: 3.2rem;
}

#services .card {
  padding: 2.4rem;
  text-align: left;
  background-color: white;
  border: 1px solid var(--brand-light);
  border-radius: 0.6rem;
}

#services .card h3 {
  margin-block: 1.6rem;
}

/* CTRL + K + NIVEL A FECHAR/COMPACTAR */

/*==========================ABOUT/SECTION======================*/

#about {
  text-align: left;
  background-color: var(--brand-beige);
}

#about header h2 {
  margin-bottom: 2.4rem;
}

#about .content p {
  margin-bottom: 6rem;
}

/*======================== CONTACT ================== */
#contact {
  text-align: left;
}

#contact header {
  margin-bottom: 3.2rem;
}

#contact ul {
  display: flex;
  flex-direction: column;
  gap: 1.6rem; /* GAP na vertical */
  margin-bottom: 3.2rem;
}

#contact ul li {
  display: flex;
  align-items: center;
  gap: 0.8rem; /* GAP na horizontal, já que o item está disposto assim */
}

/*===================== FOOTER ==================*/

#footer {
  background-color: var(--primary-color);
  padding-block: 6rem;
  text-align: left;
  color: white;
}

#footer .logo {
  /* Display inline não aceita margens verticais e nem altura e largura */
  display: inline-block; /* Vai manter as caracteristicas do inline até eu mudar elas */
  margin-bottom: 2.4rem;
}

#footer .logo svg {
  width: 23.6rem;
  height: 3.1rem;
}

#footer .logo path {
  fill: white;
}

#footer p {
  color: var(--brand-beige);
  line-height: 2;
  margin-bottom: 3.2rem;
}

#footer .social-links {
  justify-content: flex-start;
}

/*=======================BACK TO TOP====================*/
#backToTopButton {
  position: fixed;
  bottom: 1rem;
  right: 3rem;
  opacity: 0;
  visibility: hidden;
  transform: translateY(100%);
  transition: 200ms;
}

#backToTopButton.show {
  opacity: 1;
  visibility: visible;
  transform: translateY(0);
}

















/*====================RESPONSIVO==================*/

/* PONTO DE QUEBRA: PONTO DE MUDANÇA DO LAYOUT DE ACORDO COM O TAMANHO DO DISPOSITIVO */


@media (min-width: 1024px) {
  /* Quando meu dispositivo atingir uma largura minima de 1024, ele vai aplicar o que está dentro dos colchetes */


  /*====================GERAL==================*/
  
  body {
    overflow: auto; /*Vai fazer com que o overflow(scroll) não fique sobreposto, e conte como parte da página */
  }
  
  .wrapper {
    width: min(112rem, 100%);
    display: grid; /* Trabalha com as caixas na horizontal */
  }

  section {
    padding-block: 16rem;
  }

  section header h2 {
    font-size: 4rem;
    line-height: 5.2rem;
  }

  .col-a {
    grid-area: A;
  }

  .col-b {
    grid-area: B;
  }

  /*====================RESET==================*/
  nav#navigation .wrapper * {
    margin: 0;
    padding: 0;
    visibility: initial; /* Initial: valor inicial antes de eu colocar o css */
    display: initial;
    opacity: initial;
    flex-direction: initial;
    position: initial;
    font-size: initial;
    transform: initial;
    color: initial;
    background-color: initial;
    font-weight: initial;
    filter: initial;
  }

  nav#navigation .close-menu,
  nav#navigation .open-menu,
  nav#navigation .social-links {
    display: none;
  }
  
  /*====================NAVIGATION==================*/

  nav#navigation .menu {
    display: flex;
    align-items: center;
    justify-content: space-between;
    /*Caixa está limitada ao tamanho do conteúdo, por isso não se modifica */
    width: 60%;
  }

  nav#navigation .menu ul:nth-child(1) {
    /* Definindo o primeiro filho para que ele não puxe o "social-links" que foi escondido anteriormente, devido a especificidade */
    display: flex;
    gap: 3.2rem;
  }

  nav#navigation .menu ul li a {
    color: var(--primary-color);
    opacity: 0.7;
  }

  nav#navigation .menu a.button {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 1rem 2.4rem;
    border: 1px solid var(--primary-color);
    border-radius: 4rem;
    color: var(--primary-color);
    font-size: 1.4rem;
    line-height: 1.8rem;
    text-transform: UPPERCASE;
    font-weight: bold;
    background-color: none;
  }

  nav#navigation .menu a.button:hover {
    background-color: var(--primary-color);
    color: #FFF;
    border: none;
    filter: none;
  }
  
  nav#navigation.scroll .menu a.button {
    background-color: white;
    color: var(--primary-color);
  }

  nav#navigation.scroll .menu ul li a {
    color: var(--brand-light2);
    opacity: 0.7;
  }

  nav#navigation .menu ul li a {
    transition: opacity .2s;
  }
  
  nav#navigation .menu li a.active,
  nav#navigation .menu li a:hover {
    font-weight: 700;
    opacity: 1;
  }
  
  nav#navigation .menu ul li a::after { /*Conteúdo depois (after) do elemento, adicionando borda debaixo do elemento */
    content: '';
    width: 0%;
    height: 2px;
    background-color: var(--primary-color);
    display: block;
    position: relative;
    bottom: -2rem;
    left: -0.5rem;
    transition: width 0.2s;
  }

  nav#navigation.scroll .menu ul li a::after {
    background-color: white;
  }

  nav#navigation .menu li a.active::after,
  nav#navigation .menu ul li a:hover::after {
    padding-inline: 0.8rem;
    width: 100%;
  }

  nav#navigation.scroll .menu li a {
    transition: opacity 0.2s;
  }

  nav#navigation.scroll .menu li a.active,
  nav#navigation.scroll .menu li a:hover {
    opacity: 1;
  }

  nav#navigation.scroll .menu a.button.active,
  nav#navigation.scroll .menu a.button:hover {
    background-color: var(--primary-color);
    color: #FFF;
    filter: brightness(1.2);
    transition: none;
  }

  /*=======================HOME===================*/
  
  #home::before {
    height: calc(96% - var(--nav-height));
  }
  #home {
    padding-top: var(--nav-height);
  }


  #home .wrapper {
    /* No grid posso definir a quantidade de colunas ou linhas. Como se fosse uma grade*/
    /* No grid nós podemos definir o tamanho das colunas com a unidade de medida do display grid
    chamado frações (1f, por exemplo), como se fosse um terço, ou dois terços do tamanho, para que todos caibam na tela */
    grid-template-columns: 60.5rem 1fr; /* Duas colunas de tamanhos diferentes, coluna vai pra direita */
    grid-template-areas: 
    'A B'
    'C C'; /* Definindo a area de cada coluna, como se fosse uma grade. */
  }

  #home .col-a {
    text-align: left;
    align-self: center; /* Alinha os elementos da coluna ao centro */
  }


  #home h1 {
    font-size: 5.2rem;
  }

  #home  p {
    font-size: 1.8rem;
  }

  #home .stats {
    grid-area: C;
    flex-direction: row;
    padding: 6rem;
    gap: 0;
  }

  #home .stats .stat + .stat { /*Pegue um stat que tenha um stat anterior */
    border-left: 1px solid var(--primary-color);
  }

  #home .stats .stat {
    flex: 1; /*Propriedade que define para cada elemento filho de uma div principal flex que suas larguras sejam iguais aos tres */
  }

  #home .button {
    margin: 0;
  }

  #home img {
    width: 42rem;
  }
  
  /*=======================SERVICES===================*/
  #services h2 {
    width: 47rem;
    margin-inline: auto;
  }

  #services .cards {
    flex-direction: row;
    flex-wrap: wrap; /* Encaixe os elementos em linha, mas respeitando o tamanho deles */
    gap: 4rem;
  }

  #services .card {
    width: 30%;
    flex-grow: 1; /*Preenche o espaço restante dividindo esse espaço e atribuindo ele a cada elemento filho */
  }

  /*======================= ABOUT ===================*/

  #about .wrapper {
    grid-template-columns: 48rem 1fr;
    grid-template-areas: 'B A';
    gap: 6.7rem;
  }

  #about .col-a {
    align-self: center;
  }

  #about .content p {
    margin-bottom: 0;
  }

  /*======================= CONTACT ===================*/
  
  #contact .wrapper {
    grid-template-columns: 1fr 57.5rem;
    grid-template-areas: 'A B';
  }

  #contact h2 {
    width: 40.4rem;
  }

  #contact .content ul {
    margin-block: 4rem;
  }

  /*======================= FOOTER ===================*/
  #footer {
    padding-block: 8rem;
  }

  #footer .wrapper {
    grid-template-columns: 1fr 1fr;
    grid-template-areas: 'A B';
  }

  #footer .col-a {
    align-self: center;
  }

  #footer .col-b {
    align-items: center;
    justify-self: flex-end; /* Vai ficar no meio e no end dele, no caso direito */
  }

  #footer p {
    margin-bottom: 0;
  }



















}

